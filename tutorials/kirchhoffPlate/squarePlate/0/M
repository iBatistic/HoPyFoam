/*--------------------------------*- C++ -*----------------------------------*\
| solids4foam: solid mechanics and fluid-solid interaction simulations        |
| Version:     v2.0                                                           |
| Web:         https://solids4foam.github.io                                  |
| Disclaimer:  This offering is not approved or endorsed by OpenCFD Limited,  |
|              producer and distributor of the OpenFOAM software via          |
|              www.openfoam.com, and owner of the OPENFOAM® and OpenCFD®      |
|              trade marks.                                                   |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       areaScalarField;
    location    "0";
    object      M;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 1 -2 0 0 0 0];

internalField   uniform 0;

boundaryField
{
    right
    {
        // Simply supported
        type            fixedValue;
        value           uniform 0;

        // Clamped
        //type            clampedMoment;
        //relaxationFactor 0.1;
        value           uniform 0;
    }

    top
    {
        // Simply supported
        type            fixedValue;
        value           uniform 0;

        // Clamped
        //type            clampedMoment;
        //relaxationFactor 0.1;
        //value           uniform 0;
    }

    bottom
    {
        // Simply supported
        type            fixedValue;
        value           uniform 0;

        // Clamped
       // type            clampedMoment;
        //relaxationFactor 0.1;
        //value           uniform 0;
    }

    left
    {
        // Simply supported
        type            fixedValue;
        value           uniform 0;

        // Clamped
        //type            clampedMoment;
        //relaxationFactor 0.1;
        //value           uniform 0;
    }

    back
    {
         type            empty;
    }

    front
    {
         type            empty;
    }
}

// ************************************************************************* //
